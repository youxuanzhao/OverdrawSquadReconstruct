[gd_scene load_steps=9 format=3 uid="uid://ccesxqqs15n5l"]

[ext_resource type="Texture2D" uid="uid://cnrsyw84mrqer" path="res://assets/equipment/test/chestplate.png" id="1_nb0o0"]
[ext_resource type="Script" path="res://core/loot_container.gd" id="1_w0slc"]
[ext_resource type="Texture2D" uid="uid://cd8pi2b4yw8xd" path="res://assets/general/light.png" id="3_2xsdf"]

[sub_resource type="BoxShape3D" id="BoxShape3D_3qg1g"]
size = Vector3(0.127808, 0.110336, 0.0934448)

[sub_resource type="Animation" id="Animation_j0ode"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("LootSprite:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(3.48787e-16, 3.48787e-16, 3.48787e-16)]
}

[sub_resource type="Animation" id="Animation_iro6w"]
resource_name = "drop"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(0.06, 0.06, 0.06), Vector3(0.6, 0.6, 0.6)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("LootSprite:offset")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.7, 1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(2.08165e-12, 30), Vector2(0, 0)]
}
tracks/2/type = "method"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.1),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"tween_position"
}]
}

[sub_resource type="Animation" id="Animation_hhp3e"]
resource_name = "idle"
length = 5.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("LootSprite:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(3.48787e-16, 3.48787e-16, 3.48787e-16), Vector3(3.48787e-16, 6.28319, 3.48787e-16)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("LootSprite:offset:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 2.5, 5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [0.0, 5.0, 0.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_ma8du"]
_data = {
"RESET": SubResource("Animation_j0ode"),
"drop": SubResource("Animation_iro6w"),
"idle": SubResource("Animation_hhp3e")
}

[node name="LootContainer" type="Node3D"]
transform = Transform3D(0.06, 0, 0, 0, 0.06, 0, 0, 0, 0.06, 0, 0, 0)
script = ExtResource("1_w0slc")

[node name="DetectArea" type="Area3D" parent="."]

[node name="CollisionShape3D" type="CollisionShape3D" parent="DetectArea"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.09808e-05, 0.00628258, -0.000516046)
shape = SubResource("BoxShape3D_3qg1g")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_ma8du")
}

[node name="LootSprite" type="Sprite3D" parent="."]
transform = Transform3D(1, -3.48787e-16, 3.48787e-16, 3.48787e-16, 1, -3.48787e-16, -3.48787e-16, 3.48787e-16, 1, 0, 0, 0)
texture_filter = 0
render_priority = 1
texture = ExtResource("1_nb0o0")

[node name="Sprite3D" type="Sprite3D" parent="."]
transform = Transform3D(1, -8.41576e-16, 1.04636e-15, 3.48787e-16, 2.41287, -1.04636e-15, -3.48787e-16, 8.41576e-16, 3, 2.08165e-12, 0.256201, -0.01)
modulate = Color(0.954281, 0.586092, 0, 1)
texture_filter = 0
render_priority = 1
texture = ExtResource("3_2xsdf")

[connection signal="mouse_entered" from="DetectArea" to="." method="_on_detect_area_mouse_entered"]
[connection signal="mouse_exited" from="DetectArea" to="." method="_on_detect_area_mouse_exited"]
